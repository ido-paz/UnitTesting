1. בדיקות יחידה  - (Unit test) בדיקות יחידה הן בדיקות ברמת יחידות המערכת הקטנות שמאמתות את פעילותן התקינה של היחידות. בדרך כלל הבדיקה מכסה את יחידת הקוד הקטנה ביותר, שהיא פרוצדורה או פונקציה,
מטרת בדיקות היחידה היא לבודד כל חלק, ולהראות שכל חלק כזה עובד באופן תקין כאשר הוא עצמאי. בדיקות היחידה מספקות סיכום חד משמעי שהחלק עומד בתנאים בהם הוא אמור לעמוד. 
--
2. התוצאה של בדיקות היחידה מביאה לכמה יתרונות:
א. תהליך שינוי - ניתן לבצע שיפורים ושדרוגים ליחידה תוך שימוש בבדיקות היחידה לצורך ווידוא הנכונות, ואי הפגיעה ביכולות קודמות.
ב. פישוט תהליך השילוב - רק לאחר שכל החלקים עובדים טוב, יש טעם לעבור אל בדיקות השילוב הבוחנות את כל המערכת. בדיקות השילוב הן מורכבות משום שהן עוסקות בכל המערכת. לאחר ביצוע בדיקות יחידה אנו מצמצמים את הבעיות בהן ניתקל בשלב זה לבעיות שילוב, לאחר שמובטח לנו כי כל יחידה כשלעצמה עובדת בצורה תקינה.
ג. תיעוד - בדיקות היחידה מהוות סוג של תיעוד ליחידה. לעיתים כדי להבין את יכולתיה של יחידה ספציפית, ניתן להסתכל על בדיקות היחידה שהוא עומד בהם.
ד. הפרדת ממשק ממימוש - בדיקות היחידה מאלצות את המפתחים לשמור על ממשקים אחידים כלפי שאר המערכת. אחידות זו תורמת לתאימות של היחידה אל כלל המערכת, וליכולת לחלק את עבודת הפיתוח של יחידות שונות לצוותים שונים, וכך גם את עבודת הבדיקות.
--
3.פיתוח מונחה-בדיקות (Test-driven development ובקיצור TDD) היא מתודולוגיית פיתוח תוכנה שבה נכתבת בדיקת יחידה בטרם נכתב הקוד אותו היא בודקת. בפיתוח בשיטה זו בדיקת היחידה נכתבת תמיד באמצעות חבילת תוכנה המיועדת להרצה אוטומטית של בדיקות היחידה (כגון JUnit). 